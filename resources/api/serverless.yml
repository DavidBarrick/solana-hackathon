service: kyd-api

custom:
  S3_BUCKET: ${cf:kyd-resources-${self:provider.stage}.S3Bucket}
  USER_POOL_ARN: ${cf:kyd-resources-${self:provider.stage}.UserPoolArn}
  USER_POOL_ID: ${cf:kyd-resources-${self:provider.stage}.UserPoolId}
  TABLE_NAME: ${cf:kyd-resources-${self:provider.stage}.DynamoTable}
  TABLE_ARN: ${cf:kyd-resources-${self:provider.stage}.DynamoTableArn}
  secrets: ${ssm:/aws/reference/secretsmanager/kyd-${self:provider.stage}}

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  lambdaHashingVersion: "20201221"
  apiGateway:
    apiKeys:
      - KYD-API-${opt:stage, 'dev'}
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 30
  environment:
    S3_BUCKET: ${self:custom.S3_BUCKET}
    CANDY_MACHINE_ID: ${self:custom.secrets.CANDY_MACHINE_ID}
    RPC_HOST: ${self:custom.secrets.RPC_HOST}
    USER_POOL_ID: ${self:custom.USER_POOL_ID}
    TABLE_NAME: ${self:custom.TABLE_NAME}
  tracing:
    lambda: true
  iam:
    role:
      name: ${self:service}-${self:provider.stage}-role
      statements:
        - Effect: Allow
          Action:
            - s3:getObject
            - s3:putObject
          Resource:
            - arn:aws:s3:::${self:custom.S3_BUCKET}/*
        - Effect: Allow
          Action:
            - cognito-idp:AdminGetUser
          Resource:
            - ${self:custom.USER_POOL_ARN}
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
          Resource:
            - ${self:custom.TABLE_ARN}*

functions:
  fetchEvents:
    handler: tasks/fetchEvents.handler
    events:
      - http:
          path: events
          method: get
          private: true
          cors: true
          authorizer:
            name: authorizer
            arn: ${self:custom.USER_POOL_ARN}
  createPurchase:
    handler: tasks/createPurchase.handler
    environment:
      STRIPE_SK: ${self:custom.secrets.STRIPE_SK}
    events:
      - http:
          path: events/{event_id}/purchase
          method: post
          private: true
          cors: true
          authorizer:
            name: authorizer
            arn: ${self:custom.USER_POOL_ARN}
  createEvent:
    handler: tasks/createEvent.handler
    events:
      - http:
          path: events
          method: post
          private: true
          cors: true
          authorizer:
            name: authorizer
            arn: ${self:custom.USER_POOL_ARN}
  validateCode:
    handler: tasks/validateCode.handler
    events:
      - http:
          path: validate
          method: post
          private: true
          cors: true
          authorizer:
            name: authorizer
            arn: ${self:custom.USER_POOL_ARN}
  mintTickets:
    handler: tasks/mintTickets.handler
    timeout: 900
  processWebhook:
    handler: tasks/processWebhook.handler
    timeout: 120
    environment:
      STRIPE_SK: ${self:custom.secrets.STRIPE_SK}
    events:
      - http:
          path: webhooks/stripe
          method: post
